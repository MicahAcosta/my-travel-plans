# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1
jobs:
  print_hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello !"

  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Say World"
          command: "echo  World!"
          
  print_env_var:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_ENV_VAR     
            
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Save hello_World"
          command: |
            echo "text to output here" > ~/output.txt  
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt


  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      #- checkout
      - attach_workspace:
          at: ~/
      - run:
          name: "print output_file"
          command: |
            cat ~/output.txt                      

# jobs:
#   save_hello_world_output:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo "hello world" > ~/output.txt
#       - persist_to_workspace:
#           root: ~/
#           paths:
#             - output.txt

# print_output_file:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - attach_workspace:
#           at: ~/
#       - run: cat ~/output.txt

# Orchestrate jobs using workflows
workflows: 
  welcome:
        # Run the welcome/run job in its own container
    jobs:
      #- welcome/run
      - print_hello
      - print_world:
          requires:
            - print_hello
      - print_env_var:
          requires:
            - print_world
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
    # jobs:
    #   - print_hello
    #   - print_world:
    #     requires:
    #       - print_hello

